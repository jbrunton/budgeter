<% breadcrumb :account_transactions, @account %>

<p id="notice"><%= notice %></p>

<h2><%= @account.name %></h2>

<script>
  function loadStatement() {
    var query = $('#statement_options').serialize();
    $('#transactions').load(`transactions/statement?${query}`, null, initializeCategoryForms);
  }

  function loadSummary() {
    var query = $('#statement_options').serialize();
    $('#summary').load(`transactions/statement_summary?${query}`);
  }

  function initializeCategoryForms() {
    function updateRow($tr, response) {
      var disableCheckbox = response.category != null;
      $tr.find('form.verified input[type=checkbox]').prop('disabled', disableCheckbox);
      $tr.removeClass('verified').addClass(response.verified_status);
    }

    $('.transactions form.category input[type=text]').change(function() {
      var $this = $(this);
      var action = $this.closest('form')[0].action + '.json';
      var data = $this.closest('form').serializeArray();
      $.post(action, data, function(response) {
        var autocompleteData = {};
        response.project_categories.forEach(function(val) {
          autocompleteData[val] = null;
        });
        $('.transactions form.category input[type=text]').autocomplete({
          data: autocompleteData,
          limit: 20, // The max amount of results that can be shown at once. Default: Infinity.
          onAutocomplete: function(val) {
            // Callback function when value is autcompleted.
          },
          minLength: 1, // The minimum length of the input for the autocomplete to start. Default: 1.
        });
        loadSummary();
        updateRow($this.closest('tr'), response);
      }, 'json');
    });
    $('.transactions form.verified input[type=checkbox]').change(function() {
      var $this = $(this);
      var action = $this.closest('form')[0].action + '.json';
      var data = $this.closest('form').serializeArray();
      $.post(action, data, function(response) {
        loadSummary();
        updateRow($this.closest('tr'), response);
      }, 'json');
    });
    $('.transactions form.category input[type=text]').autocomplete({
      data: <%=json_escape @project.categories.map{ |c| [c, nil] }.to_h.to_json.html_safe %>,
      limit: 20, // The max amount of results that can be shown at once. Default: Infinity.
      onAutocomplete: function(val) {
        // Callback function when value is autcompleted.
      },
      minLength: 1, // The minimum length of the input for the autocomplete to start. Default: 1.
    });

    $('.transactions form.category input[type=text]').focus(function() {
      $(this).closest('tr').addClass('highlight');
    });
    $('.transactions form.category input[type=text]').focusout(function() {
      $(this).closest('tr').removeClass('highlight');
    });
  }

  $(function() {


    loadStatement();
    loadSummary();

    $('#statement_options').change(function() {
      loadStatement();
      loadSummary();
    });
  });
</script>

<form id="statement_options" class="row">
  <div class="input-field col s3">
    <%= select_tag 'month', options_for_select(@month_options, @month_options.last[1]), id: 'month' %>
    <label>Month</label>
  </div>
  <div class="input-field col s3">
    <%= select_tag 'sort_by', options_for_select(@sort_options), id: 'sort_by' %>
    <label>Sort by</label>
  </div>
  <div id="summary" class="col s6">

  </div>
</form>

<div id="transactions">

</div>

<br>
